extends layout

block head

block content
  body(style="display: none")
    audio#soundFx
      source(src="/sounds/notification.wav")
    a#nb-dialog-container.mt-save-s(href="#", data-rel="lightcase")
      .nb-dialog-box
        .nb-background-blur
        .nb-header
          .nb-contents
            .nb-left
              i.fa.fa-bell.text-color-pink
              |   Notifications
            .nb-right 
        .nb-contents.nb-main-content
          strong#nbcontenttitle
            | Camera
          br
          span#nbcontent
    #loading.d-flex.h-100max.w-100.justify-content-center.align-content-center(style='display: none!important;')
      h4.loading-title.mt-save
        b=t('views.logout.title') + ','
        br
        span=t('views.logout.undertitle') + '...'
      .row.w-100.d-flex.justify-content-center.align-content-center
        .w-100.d-flex.justify-content-center
          img#userpic-black(src=photo, alt=username)
        .w-100.d-flex.justify-content-center.mt-3
          h3#usertitle-black.profile-title-black= username
        .w-100.d-flex.justify-content-center
          p#userrole-black.profile-role-black= role
      .loading-circle
        .lds-ring
          div
          div
          div
          div
    main#main
      - activeCams = 0
      each camEntry in Object.keys(settings.dashboard.cameras)
        if settings.dashboard.cameras[camEntry]
          - activeCams = activeCams + 1
      nav#header.navbar.fixed-top.navbar-light.white-nav-inner
        .container.position-relative
          .navbar-brand 
            #contentImg
              img(src="/images/web/logo_transparent-256.png", width="45", height="45", alt="Logo")
              a.nav-header-title2(href="/dashboard", target="_self")=t('views.cameras.title')
          .nav-desk
            ul
              li.nav-item
                a.nav-link.smoothLink(href="/dashboard")=t('navigation.dashboard') 
              if role !== 'User'
                li.nav-item.active
                  a.nav-link.smoothLink(href="/cameras")=t('navigation.cameras')
                li.nav-item
                  a.nav-link.smoothLink(href="/recordings")=t('navigation.recordings')
                li.nav-item
                  a.nav-link.smoothLink(href="/notifications")=t('navigation.notifications')
                    span.notbadge.badge.badge-light.ml-2= not_size
              li.nav-item
                a.nav-link.smoothLink(href="/settings")=t('navigation.settings')
              li.nav-item.camview
                a.nav-link.smoothLink(href="/camviews")=t('navigation.camviews')
              if !noAuth
                li.nav-item.logout
                  a.nav-link(href=is_phone?"#":"/logout" id=is_phone?"logoutBtn":"logout")=t('navigation.logout')
          button.navbar-toggler(aria-label="Toggler")
            span#togglebutton.navbar-toggler-icon
            #navbarNavCustom.container.collapse.navbar-collapse.red-collapse.hidenavi(style="display: none")
              ul.navbar-nav.navbar-red
                li.nav-item-placeholder
                li.nav-item
                  a.nav-link.smoothLink(href="/dashboard")=t('navigation.dashboard')
                if role !== 'User'
                  li.nav-item.active
                    a.nav-link.smoothLink(href="/cameras")=t('navigation.cameras')
                  li.nav-item
                    a.nav-link.smoothLink(href="/recordings")=t('navigation.recordings')
                  li.nav-item
                    a.nav-link.smoothLink(href="/notifications")=t('navigation.notifications')
                      span.notbadge.badge.badge-light.ml-2= not_size
                li.nav-item
                  a.nav-link.smoothLink(href="/settings")=t('navigation.settings')
                if !noAuth
                  li.nav-item
                    a.nav-link(href=is_phone?"#":"/logout" id=is_phone?"logoutBtn":"logout")=t('navigation.logout')
                li.nav-item
                  a.nav-link.camview-nav-item.smoothLink(href="/camviews")=t('navigation.camviews')
            #blackoverlay.mobile-nav-overly.hidebg(style="display: none")
      .d-block.h-100vh.fix-body-top-inner
        section.breadcrumbs-filter.w-100.h-100.d-flex.justify-content-center
          .filter-area.container.m-0.p-0.position-relative.plr-15(style=cameras && Object.keys(cameras).length ? "display: block;" : "display: none;")
            .btn-group.filter-text Filter
            .btn-group.mr-2
              button.btn.btn-secondary.m-0.filter-dropdown-title.filter-all=t('breadcrumb.all')
            .btn-group.mr-2
              button.btn.btn-secondary.dropdown-toggle.m-0.filter-dropdown-title(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')=t('breadcrumb.cameras')
              .dropdown-menu.p-2(x-placement='bottom-start' style='position: absolute; transform: translate3d(98px, 38px, 0px); top: 0px; left: 0px; will-change: transform;')
                each cam in cameras
                  a.dropdown-item.p-2.filter-dropdown-text.mb-1(data-group=cam.originName)= cam.originName
            .btn-group.mr-2
              button.btn.btn-secondary.dropdown-toggle.m-0.filter-dropdown-title(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')=t('breadcrumb.rooms')
              .dropdown-menu.p-2(x-placement='bottom-start' style='position: absolute; transform: translate3d(98px, 38px, 0px); top: 0px; left: 0px; will-change: transform;')
                each room in settings.general.rooms
                  a.dropdown-item.p-2.filter-dropdown-text.mb-1(data-group=room)= room
            .btn-group.mr-2
              button.btn.btn-secondary.dropdown-toggle.m-0.filter-dropdown-title(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')=t('breadcrumb.status')
              .dropdown-menu.p-2(x-placement='bottom-start' style='position: absolute; transform: translate3d(98px, 38px, 0px); top: 0px; left: 0px; will-change: transform;')
                a.dropdown-item.p-2.filter-dropdown-text.mb-1(data-group='Online')=t('breadcrumb.online')
                a.dropdown-item.p-2.filter-dropdown-text.mb-1(data-group='Offline')=t('breadcrumb.offline')
            .filter-icon.text-center
              i#dataFilter.fas.fa-filter.mt-2                                                           
        #cameras.container.position-relative.mt-breadcrumb
          i#left-arrow.hnavi.hleft.fa.fa-arrow-left.d-flex.justify-content-center(style="display: none!important;")
          i#right-arrow.hnavi.hright.fa.fa-arrow-right.d-flex.justify-content-center(style="display: none!important;")
          #shuffledCards.row.justify-content-center.horizontal-direction 
            if cameras
              each camEntry in Object.keys(settings.cameras)
                - room = settings.cameras[camEntry].room.replace(/\s/g,"");
                - ping = settings.cameras[camEntry].ping
                - source = settings.cameras[camEntry].source
                - imgSource = settings.cameras[camEntry].stillImageSource
                - info = settings.cameras[camEntry].info
                - cam = camEntry.replace(/\s/g,"") 
                .video-cards.col-lg-6.col-md-6.col-12(data-filterable='yes', class=room, data-groups=[room, camEntry, ping ? 'Online' : 'Offline'], data-title=camEntry)
                  .card.bg-transparent.no-shadow
                    a.position-relative.h-255px(href="/camera/" + camEntry, target="_self", aria-label=camEntry)
                      if ping && (cameras[camEntry].source || cameras[camEntry].sillImageSource) 
                        .lds-ring(id=cam + 'LDR')
                          div
                          div
                          div
                          div
                        .card-img-top.add-shadow.camera-img.bg-color-black.h-100(id=cam + 'Snap')                      
                      else
                        svg.bi.bi-camera-video-off.offline-video(width="1em" height="1em" viewbox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg")
                          path(fill-rule="evenodd" d="M10.961 12.365a1.99 1.99 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518l.605.847zM1.428 4.18A.999.999 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634l.58.814zM15 11.73l-3.5-1.555v-4.35L15 4.269v7.462zm-4.407 3.56l-10-14 .814-.58 10 14-.814.58z")
                        .card-img-top.add-shadow.camera-img.bg-color-black.h-100
                    .card-body.camera-cards
                      .row.card-title-cameras
                        .col-10
                          h5.card-title-camera.text-truncate= camEntry
                        .col-2.text-right
                          - not = lastNotifications[camEntry]
                          if not.time
                            a(tabindex='0' role='button' data-placement='bottom' data-toggle='popover' data-trigger='focus' title=t('views.cameras.notification_title') data-content=t('views.cameras.notification_info') + ' ' + not.time, aria-label=t('views.cameras.notification_info'))
                              i.fa.fa-bell.text-color-pink
                          else
                            a(tabindex='0' role='button' data-placement='bottom' data-toggle='popover' data-trigger='focus' title=t('views.cameras.notification_title') data-content=t('views.cameras.notification_nodata'), aria-label=t('views.cameras.notification_title'))
                              i.fa.fa-bell.text-secondary
                      p.card-text-cameras.text-elipsis= info
              .col-sm-1.sizer-item
            else
              img.col.mw-470(src="/images/web/no_cameras.png", alt="No Cameras")
block footscripts
  script(type='text/javascript').
    function getCameras(){
      return !{JSON.stringify(cameras)};
    }    
  script(type='text/javascript' src='/plugins/shuffle/shuffle.min.js' defer)
  script(type='text/javascript' src='/javascripts/utils/filterShuffle.js' defer)
  script(type='text/javascript' src='/javascripts/views/cameras.js' defer)